<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="
            http://www.springframework.org/schema/beans
            http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
            http://www.springframework.org/schema/mvc
            http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd
            http://www.springframework.org/schema/aop
            http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
            http://www.springframework.org/schema/context
            http://www.springframework.org/schema/context/spring-context-3.0.xsd">
    <!-- -->
    <context:component-scan base-package="net.shopin.web.controller"/>
    <context:component-scan base-package="net.shopin.web.payController"/>
    <context:component-scan base-package="net.shopin.web.interceptor"/>
    <context:property-placeholder location="classpath:application.properties"/>

    <mvc:annotation-driven/>
    <mvc:interceptors>
        <mvc:interceptor>
            <mvc:mapping path="/**/*.html"/>
            <bean class="net.shopin.web.interceptor.ChannelInjectInterceptor"/>
        </mvc:interceptor>
    </mvc:interceptors>
    <bean class="org.springframework.web.servlet.view.ContentNegotiatingViewResolver">
        <property name="mediaTypes">
            <map>
                <entry key="atom" value="application/atom+xml"/>
                <entry key="rss" value="application/rss+xml"/>
                <entry key="xml" value="application/xml"/>
                <entry key="jsr" value="application/jsr"/>
                <entry key="json" value="application/json"/>
            </map>
        </property>
        <property name="defaultContentType" value="text/html"/>
        <property name="ignoreAcceptHeader" value="true"/>
        <property name="favorPathExtension" value="true"/>
        <property name="viewResolvers">
			<list>
			    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
			        <property name="viewClass" value="org.springframework.web.servlet.view.JstlView"/>
			        <property name="prefix" value="/WEB-INF/jsp/"/>
			        <property name="suffix" value=".jsp"></property>
			    </bean>
			</list>
		</property>
        <property name="defaultViews">
            <list>
                <bean class="org.springframework.web.servlet.view.xml.MarshallingView">
                    <property name="marshaller">
                        <bean class="org.springframework.oxm.xstream.XStreamMarshaller"/>
                    </property>
                </bean>
                <bean class="org.springframework.web.servlet.view.json.MappingJacksonJsonView"/>
                <bean class="net.shopin.web.view.JSONRPCView"/>
                <bean class="net.shopin.web.view.AtomView"/>
                <bean class="net.shopin.web.view.RssView"/>
            </list>
        </property>
    </bean>
    
    <bean id="freemarkerConfig" class="org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer">
        <!--<property name="templateLoaderPath" value="/WEB-INF/freemarker/"/>-->
        <property name="templateLoaderPath" value="/WEB-INF/templates/page/"/>
        <property name="freemarkerSettings">
            <props>
                <prop key="defaultEncoding">utf-8</prop>
            </props>
        </property>
    </bean>
    <!--
    View resolvers can also be configured with ResourceBundles or XML files. If you need
    different view resolving based on Locale, you have to use the resource bundle resolver.
    -->
    <bean id="freeMarkerViewResolver" class="org.springframework.web.servlet.view.freemarker.FreeMarkerViewResolver">
        <property name="cache" value="true"/>
        <property name="prefix" value="templates/page/"/>
        <property name="suffix" value=".ftl"/>
    </bean>

    <bean class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
        <property name="exceptionMappings">
            <props>
                <prop key="com.shopin.modules.security.exception.UnLoginException">login</prop>
                <prop key="org.springframework.web.servlet.PageNotFound">pageNotFound</prop>
                <prop key="org.springframework.dao.DataAccessException">dataAccessFailure</prop>
                <prop key="org.springframework.transaction.TransactionException">dataAccessFailure</prop>
                <prop key="java.lang.IllegalArgumentException">pageNotFound</prop>
            </props>
        </property>
    </bean>

    <bean id="securityInterceptor" class="com.shopin.modules.security.interceptor.MethodSecurityInterceptor"
          destroy-method="destroy">
        <property name="methodSecurityClient">
            <ref bean="methodSecurityClient"/>
        </property>
    </bean>

    <aop:config proxy-target-class="false">
        <aop:advisor
                pointcut="execution(* net.shopin.web.controller..*.*(..))"
                advice-ref="securityInterceptor"/>
    </aop:config>

</beans>